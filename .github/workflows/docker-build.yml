name: Docker Build and Push

on:
  push:
    branches:
      - 'main'
      - 'develop'
      - 'feature/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/market-data-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Copy settings.xml from repo
      - name: Setup Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cp settings.xml ~/.m2/settings.xml

      - name: Build with Maven
        run: mvn clean package -DskipTests
        env:
          GITHUB_PACKAGES_USERNAME: ${{ github.actor }}
          GITHUB_PACKAGES_TOKEN: ${{ github.token }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=v${{ github.run_id }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}
            type=ref,event=branch,prefix=feature-,enable=${{ startsWith(github.ref, 'refs/heads/feature/') }}

      - name: List workspace contents
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Maven build output:"
          ls -la trade-data-app/target/ || true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GITHUB_PACKAGES_USERNAME=${{ github.actor }}
            GITHUB_PACKAGES_TOKEN=${{ github.token }}
          no-cache: true
          output-type: type=registry
          load: true
      
      - name: Save image tag to artifact
        run: |
          echo "v${{ github.run_id }}" > image-tag.txt
      
      - name: Upload image tag as artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: image-tag.txt
          retention-days: 1

  # Trigger deployment workflow
  # deploy:
  #   needs: build-and-push
  #   permissions:
  #     contents: read
  #     id-token: write
  #   uses: ./.github/workflows/unified-deployment.yml
  #   with:
  #     image_tag: v${{ github.run_id }}
  #   secrets: inherit
  #     contents: read
  #     id-token: write
  #   uses: ./.github/workflows/unified-deployment.yml
  #   with:
  #     image_tag: v${{ github.run_id }}
  #   secrets: inherit
  #   with:
  #     image_tag: v${{ github.run_id }}
  #   secrets: inherit
