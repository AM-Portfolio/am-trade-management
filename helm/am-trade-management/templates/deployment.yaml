apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "am-trade-management.fullname" . }}
  labels:
    {{- include "am-trade-management.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "am-trade-management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "am-trade-management.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "am-trade-management.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.environment }}
            - name: POSTGRESQL_HOST
              value: {{ .Values.postgresql.fullname }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers }}
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
              value: "health,metrics,prometheus"
            - name: MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS
              value: "always"
            - name: MANAGEMENT_METRICS_TAGS_APPLICATION
              value: "market-data-{{ .Values.environment }}"
          ports:
            - name: http
              containerPort: 8084
              protocol: TCP
          # Health checks with retry-based thresholds
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: {{ .Values.config.marketData.maxRetries }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: {{ .Values.config.marketData.maxRetries }}
          # Resource limits from values file
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
